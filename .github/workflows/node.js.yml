# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
#         cache-dependency-path: ./src/server/package-lock.json

    # - run: npm install --prefix ./initial 
    # - run: npm install --prefix ./server
#     - run: npm run build --if-present
    - name: Add remote origin
    
      run: |
        git fetch --all --unshallow
        git remote add allymaps-server https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_ALLYMAPS_SERVER }}.git
        git remote add allymaps-client https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_ALLYMAPS_CLIENT }}.git
    - name: Deploy to Heroku
      run: |
        git subtree split --prefix src/server -b serverTemp
        git push -f origin serverTemp:allymaps-server
        git branch -D serverTemp
        #git subtree split --prefix  -b clientTemp 
        git push allymaps-client HEAD:main -f
        #git branch -D clientTemp
       
       # git pull && git subtree push --prefix server heroku-server main
       # git pull && git subtree push --prefix initial heroku-client main
